spring:
  application:
    name: ai_service
  ai:
    openai:
      base-url: ${AI_URL:http://localhost:1234}
      api-key: "lm-studio"
      chat:
        options:
          model: ${CHAT_MODEL:qwen/qwen3-4b-2507}
          temperature: ${CHAT_TEMPERATURE:0.7}
          stream-usage: false
          simple-prompt: ${SIMPLE_PROMPT:}
          strict-prompt: ${STRICT_PROMPT:}
          similarity-threshold: ${SIMILARITY_THRESHOLD:0.75}
          top-k-value: ${TOP_K_VALUE:5}
      embedding:
        options:
          model: ${EMBEDDING_MODEL:text-embedding-nomic-embed-text-v1.5@f16}
    vectorstore:
      pgvector:
        dimensions: ${VECTOR_DIMENSIONS:768}
        initialize-schema: true
  datasource:
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/test}
    username: ${POSTGRES_USERNAME:test}
    password: ${POSTGRES_PASSWORD:test}
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      group-id: tg-event-handlers
      properties:
        "[spring.json.trusted.packages]": "*"
        "[spring.deserializer.value.delegate.class]": org.springframework.kafka.support.serializer.JsonDeserializer
    ai-service:
      topics:
        incoming-message:
          name: incoming-message
          partitions: 3
          replicas: 1
        answer-message:
          name: answer-message
          partitions: 3
          replicas: 1
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
server:
  port: ${SERVER_PORT:8081}